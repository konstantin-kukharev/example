// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"esb/gen/models"
)

// AddCommentOKCode is the HTTP code returned for type AddCommentOK
const AddCommentOKCode int = 200

/*AddCommentOK Comment response

swagger:response addCommentOK
*/
type AddCommentOK struct {

	/*
	  In: Body
	*/
	Payload *models.NewComment `json:"body,omitempty"`
}

// NewAddCommentOK creates AddCommentOK with default headers values
func NewAddCommentOK() *AddCommentOK {

	return &AddCommentOK{}
}

// WithPayload adds the payload to the add comment o k response
func (o *AddCommentOK) WithPayload(payload *models.NewComment) *AddCommentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add comment o k response
func (o *AddCommentOK) SetPayload(payload *models.NewComment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCommentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddCommentDefault unexpected error

swagger:response addCommentDefault
*/
type AddCommentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewAddCommentDefault creates AddCommentDefault with default headers values
func NewAddCommentDefault(code int) *AddCommentDefault {
	if code <= 0 {
		code = 500
	}

	return &AddCommentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add comment default response
func (o *AddCommentDefault) WithStatusCode(code int) *AddCommentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add comment default response
func (o *AddCommentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add comment default response
func (o *AddCommentDefault) WithPayload(payload *models.ErrorModel) *AddCommentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add comment default response
func (o *AddCommentDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCommentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
