// Code generated by go-swagger; DO NOT EDIT.

package product

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"esb/gen/models"
)

// ProductCommentAddOKCode is the HTTP code returned for type ProductCommentAddOK
const ProductCommentAddOKCode int = 200

/*ProductCommentAddOK OK response

swagger:response productCommentAddOK
*/
type ProductCommentAddOK struct {

	/*
	  In: Body
	*/
	Payload models.OkModel `json:"body,omitempty"`
}

// NewProductCommentAddOK creates ProductCommentAddOK with default headers values
func NewProductCommentAddOK() *ProductCommentAddOK {

	return &ProductCommentAddOK{}
}

// WithPayload adds the payload to the product comment add o k response
func (o *ProductCommentAddOK) WithPayload(payload models.OkModel) *ProductCommentAddOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product comment add o k response
func (o *ProductCommentAddOK) SetPayload(payload models.OkModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductCommentAddOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*ProductCommentAddDefault unexpected error

swagger:response productCommentAddDefault
*/
type ProductCommentAddDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorModel `json:"body,omitempty"`
}

// NewProductCommentAddDefault creates ProductCommentAddDefault with default headers values
func NewProductCommentAddDefault(code int) *ProductCommentAddDefault {
	if code <= 0 {
		code = 500
	}

	return &ProductCommentAddDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the product comment add default response
func (o *ProductCommentAddDefault) WithStatusCode(code int) *ProductCommentAddDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the product comment add default response
func (o *ProductCommentAddDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the product comment add default response
func (o *ProductCommentAddDefault) WithPayload(payload *models.ErrorModel) *ProductCommentAddDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product comment add default response
func (o *ProductCommentAddDefault) SetPayload(payload *models.ErrorModel) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductCommentAddDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
